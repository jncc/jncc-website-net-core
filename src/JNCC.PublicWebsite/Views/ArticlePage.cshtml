@using JNCC.PublicWebsite.Core.Models
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ArticlePage>
@{
    Layout = "Master.cshtml";
}
<main id="main">
    @(await Component.InvokeAsync("PageHero", new { model = Model }))
    <div class="container">
        @(await Component.InvokeAsync("Breadcrumbs", new { model = Model }))
        <div class="two-columns">
            <div id="content">
                @(await Component.InvokeAsync("NoPageHeroHeadline", new { model = Model }))
                @(await Html.PartialAsync("~/Views/Partials/PageAlert.cshtml", Model.PageSpecificAlertContent))
                <div class="news-tags">
	                <a href="@Model.Parent?.Url()?articleTypes=@Model.ArticleType"><span class="label location">@Model.ArticleType</span></a>
	                <a href="@Model.Parent?.Url()?years=@Model.PublishDate.Year"><span class="label location">@Model.PublishDate.Year</span></a>
	                @foreach (var tag in Model.ArticleThemes)
	                {
		                <a href="@Model.Parent?.Url()?themes=@tag"><span class="label location">@tag</span></a>
	                }
                </div>

                @Html.Raw(Model.MainContent)
                
                @(await Component.InvokeAsync("ArticlesSections", new { model = Model }))

                <div id="meta" class="callout secondary">
                    <div class="row collapse">
                        <div class="column small-12 medium-6">
                            <p><span data-tooltip title="The date this page was last published">Published</span>: <time datetime="@Model.PublishDate.ToString("yyyy-MM-dd")">@Model.PublishDate.ToLongDateString().</time> </p>
                        </div>
                        @if (Model.ReviewedDate != DateTime.MinValue)
                        {
                            <div class="column small-12 medium-6">
                                <p><span data-tooltip title="The date the content last had a meaningful editorial review">Reviewed</span>: <time datetime="@Model.ReviewedDate.ToString("yyyy-MM-dd")">@Model.ReviewedDate.ToLongDateString()</time></p>
                            </div>
                        }
                    </div>
                </div>
            </div>
            @(await Component.InvokeAsync("ArticleSidebar", new { model = Model }))
        </div>
    </div>
    @(await Component.InvokeAsync("RelatedItems", new { model = Model }))
</main>
