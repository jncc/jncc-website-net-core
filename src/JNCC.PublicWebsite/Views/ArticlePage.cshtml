@using JNCC.PublicWebsite.Core.Models
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ArticlePage>
@{
    Layout = "Master.cshtml";
}
<main id="main">
    @(await Component.InvokeAsync("PageHero", new { model = Model }))
    <div class="container">
        @(await Component.InvokeAsync("Breadcrumbs", new { model = Model }))
        <div class="two-columns">
            <div id="content">
                @(await Component.InvokeAsync("NoPageHeroHeadline", new { model = Model }))
                @(await Html.PartialAsync("~/Views/Partials/PageAlert.cshtml", Model.PageSpecificAlertContent))
                <p>
                    <a href="@Model.Parent?.Url()?articleTypes=@Model.ArticleType"><span class="label location">@Model.ArticleType</span></a>
                    <a href="@Model.Parent?.Url()?years=@Model.PublishDate.Year"><span class="label location">@Model.PublishDate.Year</span></a>
                    @foreach (var tag in Model.ArticleThemes)
                    {
                        <a href="@Model.Parent?.Url()?teams=@tag"><span class="label location">@tag</span></a>
                    }
                </p>
                @Html.Raw(Model.MainContent)
                
                @if (Model.MainContentBlocks != null && Model.MainContentBlocks.Any())
                {
	                <ul class="articles-list no-bullet">
		                @foreach (var item in Model.MainContentBlocks)
		                {
			                if (item.Content as ContentItemSchema != null)
			                {
				                <li>
					                @(await Html.PartialAsync("~/Views/Partials/Shared/ContentItemSchema.cshtml", item.Content as ContentItemSchema))
				                </li>
			                }
		                }
	                </ul>
                }

                @(await Component.InvokeAsync("ScienceDetailsSections", new { model = Model }))

            </div>
            @(await Component.InvokeAsync("ArticleSidebar", new { model = Model }))
        </div>
    </div>
    @(await Component.InvokeAsync("RelatedItems", new { model = Model }))
</main>
