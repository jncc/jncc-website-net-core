@using JNCC.PublicWebsite.Core.Models
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ScienceDetailsPage>
@{
    Layout = "Master.cshtml";
}
<main id="main">
    @(await Component.InvokeAsync("PageHero", new { model = Model }))
    <div class="container">
        @(await Component.InvokeAsync("Breadcrumbs", new { model = Model }))
        <div class="two-columns">
            <div id="content">
                @(await Component.InvokeAsync("NoPageHeroHeadline", new { model = Model }))
                @(await Html.PartialAsync("~/Views/Partials/PageAlert.cshtml", Model.PageSpecificAlertContent))
                @Html.Raw(Model.Preamble)

                @(await Component.InvokeAsync("ScienceDetailsImageAndTextSection", new { model = Model }))
                @(await Component.InvokeAsync("ScienceDetailsSections", new { model = Model }))
                <div id="meta" class="callout secondary">

                    @(await Component.InvokeAsync("ScienceDetailsCategories", new { model = Model }))

                    <div class="row collapse">
                        <div class="column small-12 medium-6">
                            <p><span data-tooltip title="The date this page was last published">Published</span>: <time datetime="@Model.PublishedDate.ToString("yyyy-MM-dd")">@Model.PublishedDate.ToLongDateString().</time> </p>
                        </div>
                        @if (Model.ReviewedDate != DateTime.MinValue)
                        {
                            <div class="column small-12 medium-6">
                                <p><span data-tooltip title="The date the content last had a meaningful editorial review">Reviewed</span>: <time datetime="@Model.ReviewedDate.ToString("yyyy-MM-dd")">@Model.ReviewedDate.ToLongDateString()</time></p>
                            </div>
                        }
                    </div>
                </div>
            </div>
            @(await Component.InvokeAsync("ScienceDetailsPageSidebar", new { model = Model }))
        </div>
    </div>
    @(await Component.InvokeAsync("GetInTouch", new { model = Model }))
    @(await Component.InvokeAsync("RelatedItems", new { model = Model }))
</main>
